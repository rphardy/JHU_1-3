## when they have updated R over their old libraries
installerVersion <- utils::packageVersion("BiocInstaller")
test0 <- (vers > "3.1.2") &&
!identical(getOption("pkgType"), "source") &&
(installerVersion >= "1.16.0") &&
(installerVersion <= "1.16.4")
if (test0) {
if (installerVersion < "1.16.4") {
txt <- "Update BiocInstaller with
oldPkgType=options(pkgType=\"source\");
biocLite(\"BiocInstaller\"); options(oldPkgType)"
message(paste(strwrap(txt, exdent=2), collapse="\n"))
}
if (vers >= "3.2") {
txt <- sprintf("BiocInstaller version %s is too old for
R version %s; remove.packages(\"BiocInstaller\"),
re-start R, then
source(\"http://bioconductor.org/biocLite.R\")",
biocVers, vers)
warning(paste(strwrap(txt, exdent=2), collapse="\n"))
}
}
}
} else {
source("http://bioconductor.org/getBioC.R")
biocLite <<-
function(pkgs, groupName="lite", ...)
{
if (missing(pkgs))
biocinstall(groupName=groupName, ...)
else
biocinstall(pkgs=pkgs, groupName=groupName, ...)
}
}
})
biocLite('snpStats')
require(snpStats)
require(hexbin)
data(for.exercise)
install.packages("hexbin", dependencies = FALSE)
require(hexbin)
data(for.exercise)
dim(snps.10)
class(snps.10)
snps.10
(snp.support)
?summary()
?"summary"
summary(snp.support)
(snp.support)
summary(snp.support)
View(snp.support)
View(subject.support)
save.image("C:/Work/BCA/BIF/Module 2/snpStats.RData")
load("C:/Work/BCA/BIF/Assignment 1/Assignment1.RData")
??delete
GK <- function(initdist,alpha,gamma,delta,n,stepsize)
{
A=matrix(c(0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0),4,4)
B=matrix(c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0),4,4)
G=matrix(c(0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0),4,4)
D=matrix(c(0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0),4,4)
D1=matrix(c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),4,4)
D2=matrix(c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0),4,4)
D3=matrix(c(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0),4,4)
D4=matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),4,4)
S <- alpha*A+beta*B+gamma*G+delta*D+(1-alpha-2*gamma)*D1+(1-beta-2*gamma)*D2+(1-alpha-2*delta)*D3+(1-beta-2*delta)*D4
T=diag(4)
for (i in seq(1,n,stepsize))
{
if (i==1)
T=T%*%S
else
for (j in seq(1:stepsize))
T=T%*%S
cat(i,":", initdist %*% T,"\n")
}
}
GK <- function(initdist,alpha,beta,gamma,delta,n,stepsize)
{
A=matrix(c(0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0),4,4)
B=matrix(c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0),4,4)
G=matrix(c(0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0),4,4)
D=matrix(c(0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0),4,4)
D1=matrix(c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),4,4)
D2=matrix(c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0),4,4)
D3=matrix(c(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0),4,4)
D4=matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),4,4)
S <- alpha*A+beta*B+gamma*G+delta*D+(1-alpha-2*gamma)*D1+(1-beta-2*gamma)*D2+(1-alpha-2*delta)*D3+(1-beta-2*delta)*D4
T=diag(4)
for (i in seq(1,n,stepsize))
{
if (i==1)
T=T%*%S
else
for (j in seq(1:stepsize))
T=T%*%S
cat(i,":", initdist %*% T,"\n")
}
}
GK(c(1,0,0,0),0.15,0.15,0.0.25,0.25,10,1)
GK(c(1,0,0,0),0.15,0.15,0.25,0.25,10,1)
GKE <- function(initdist,alpha,beta,gamma,delta,n,stepsize)
{
A=matrix(c(0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0),4,4)
B=matrix(c(0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0),4,4)
G=matrix(c(0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0),4,4)
D=matrix(c(0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0),4,4)
D1=matrix(c(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),4,4)
D2=matrix(c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0),4,4)
D3=matrix(c(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0),4,4)
D4=matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),4,4)
S <- alpha*A+beta*B+gamma*G+delta*D+(1-alpha-2*gamma)*D1+(1-beta-2*gamma)*D2+(1-alpha-2*delta)*D3+(1-beta-2*delta)*D4
T=diag(4)
for (i in seq(1,n,stepsize))
{
if (i==1)
T=T%*%S
else
for (j in seq(1:stepsize))
T=T%*%S
cat(i,":", initdist %*% T,"\n")
}
}
GKE(c(1,0,0,0),0.15,0.15,0.25,0.25,10,1)
GKE(c(0,1,0,0),0.3,0.3,0.3,0.3,10,1)
GKE(c(0,1,0,0),0.4,0.3,0.2,0.3,10,1)
GKE(c(0,1,0,0),0.1,0.2,0.2,0.3,10,1)
GKE(c(0,1,0,0),0.5,0.3,0.2,0.3,10,1)
GKE(c(0,1,0,0),0.15,0.45,0.2,0.3,10,1)
GKE(c(1,0,0,0),0.15,0.45,0.2,0.3,10,1)
GKE(c(1,0,0,0),0.15,0.15,0.2,0.3,10,1)
GKE(c(1,0,0,0),0.5,0.5,0.2,0.3,10,1)
GKE(c(1,0,0,0),0.1,0.9,0.2,0.3,10,1)
GKE(c(1,0,0,0),0.1,0.9,0.2,0.3,50,1)
GKE(c(1,0,0,0),0.1,0.9,0.2,0.3,20,1)
GKE(c(1,0,0,0),0.1,0.9,0.3,0.3,20,1)
GKE(c(1,0,0,0),0.1,0.9,0.3,0.1,20,1)
GKE(c(1,0,0,0),0.1,0.9,0.6,0.3,20,1)
GKE(c(1,0,0,0),0.1,0.9,0.15,0.2,20,1)
GKE(c(1,0,0,0),0.15,0.35,0.2,0.3,10,1)
install.packages("hmm.discnp", dependencies = FALSE)
library(hmm.discnp)
tpm <- matrix(c(0.4,0.9,0.6,0.1),2,2)
View(tpm)
ispd <- c(0.3,0.7)
yval <- c(1,2,3)
Rho <- matrix(c(0.5,0.5,0,0,0.5,0.5),2,3)
View(Rho)
del(Rho)
Rho <- matrix(c(0.5,0.5,0,0,0.5,0.5),3,2)
View(Rho)
View(tpm)
y <- sim.hmm(rep(4,10),tpm,Rho,ispd=ispd,yval=yval)
y
set.seed(111)
y <- sim.hmm(rep(4,10),tpm,Rho,ispd=ispd,yval=yval)
y
y
y <- sim.hmm(rep(4,10),tpm,Rho,ispd,yval)
y
set.seed(111)
y <- sim.hmm(rep(4,10),tpm,Rho,ispd,yval)
y
$Rho
Rho
tpm
ispd
yval
set.seed(111)
y <- sim.hmm(rep(4,10),tpm=tpm,Rho=Rho,ispd=ispd,yval=yval)
y
iv <- c(1,2,3,1)
viterbi(y=iv,tpm=tpm,Rho=Rho,ispd=ispd,log=FALSE)
y <- c(1,2,3)
viterbi(y,tpm=tpm,Rho=Rho,ispd=ispd,log=FALSE)
set.seed(111)
y <- sim.hmm(rep(4,10),tpm=tpm,Rho=Rho,ispd=ispd,yval=yval)
y
viterbi(y,tpm=tpm,Rho=Rho,ispd=ispd,log=FALSE)
viterbi(y=iv,tpm=tpm,Rho=Rho,ispd=ispd,log=FALSE)
View(Rho)
viterbi(y=iv,tpm=tpm,Rho=Rho,ispd=ispd)
View(Rho)
View(tpm)
viterbi(y=iv,object=NULL,tpm=tpm,Rho=Rho,ispd=ispd)
viterbi(y=iv,object=NULL,tpm,Rho,ispd)
ispd <- c(0.7,0.3)
viterbi(y=iv,object=NULL,tpm,Rho,ispd)
ispd <- c(0.3,0.7)
View(Rho)
tpm <- matrix(c(0.4,0.6,0.9,0.1),2,2)
viterbi(y=iv,object=NULL,tpm,Rho,ispd)
View(tpm)
tpm <- matrix(c(0.4,0.9,0.6,0.1),2,2)
viterbi(y=iv,object=NULL,tpm,Rho,ispd)
vii <- c(1,2,3,1,2,3,1,2,3)
viterbi(y=vii,tpm,Rho,ispd)
viterbi(y=vii,tpm=tpm,Rho=Rho,ispd=ispd)
viterbi(y=iv,tpm=tpm,Rho=Rho,ispd=ispd)
y
install.packages(devtools)
install.packages("car")
package("car")
library("car")
library()
?data.frame
Numbers <- c(1:10)
Numbers
remove(Numbers)
install.packages(car)
"car"
install.packages("car")
library()
numbers <- c(1:10)
words <- ("One","Two","Three","Four", "Five","Six","Seven","Eight", "Nine", "Ten")
words <- c("One","Two","Three","Four", "Five","Six","Seven","Eight", "Nine", "Ten")
words
numbers
nw <- matrix(numbers,words)
?matrix
?combine
nw <- c(numbers,words)
nw
drop nw
remove nw
remove(nw)
nw <- dataframe(numers, words)
?data.frame
nw <- data.frame(numbers,words)
nw
dim(NW)
dim(nw)
is.data.frame(nw)
print.data.frame(nw)
attributes(nw)
attributes(nw)
read.table(nw)
nw''
nw
nw[8,1]
nw[8,2]
a <- matrix(1:10, nrow=2, ncol =5)
a
X <- c(1:6)
Y <- c(5:10)
Matxy <- rbind(
)
X
Y
remove(Matxy)
Matxy <- rbind(X,Y)
Matxy
Matxyc <-cbind(X,Y)
Matxyc
remove
remove(X,Y)
remove(numbers, words)
remove(Matxy,Matxyc)
list()
library()
objects()
list a
list(a)
remove(a)
list(a)
list(objects)
library(car)
install.packages("car")
library(car)
is.data.frame(Nw)
()
library()
?data.frame
words <- c("One":"Ten")
numbers <- c(1:10)
words <- c("One","Two","Three","Four","Five","Six", "Seven", "Eight", "Nine", "Ten")
nw <- data.frame(numbers, words)
attributes(nw)
nw
nw[8,2]
a <- matrix(1:10, nrow=2, ncol=5)
x <- c(1:6)
y <- c(5:10)
matxy <- rbind(x,y)
matxy
matxyc <- cbind(x,y)
matxyc
m2 <- c(1:10)
matrix2 - dim(m2,2,5)
matrix2 <- dim(m2,2,5)
dim(m2) <- c(2,5)
m2
getwd()
x <- c("e", "e", "e", "w")
y <- factor(x)
x
y
label(y) <- c("east","west")
name(y) <- c("east","west")
values(y) <- c("east","west")
levels(y) <- c("east", "west")
y
?rnorm
args("rnorm")
rnorm
update()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("KernSmooth")
library(KernSmooth)
clear
?grep
?rownum
x <- list(a = matrix(1:4,2,2), b = matrix(1:6,3,2))
x
lapply(x, function(elt) elt[,1])
lapply(x, function(elt) {elt[,1]})
swirl()
swirl
library(swirl)
rm(list=ls())
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags, class)
xlass(cls_vect)
class(cls_vect)
sum(flags$orange)
flag_colors <- flag[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
library(swirl)
rm(list = ls())
swirl()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
?data
data("iris")
rm(list = c(flags, ok, viewinfo))
rm(list = flags, ok, viewinfo)
rm(flags)
rm(ok)
rm(viewinfo)
?rm
?iris
tapply(iris$Sepal.Length, iris$Species="virginica" , mean)
tapply(iris$Sepal.Length, iris$Species=="virginica" , mean)
iris$Species
sapply(iris$Sepal.Length, mean)
View(iris)
sapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris,2,mean)
apply(iris[,1:4],1,mean)
colMeans(iris)
rowMeans(iris[,1:4])
apply(iris[,1:4,2,mean()])
apply(iris[,1:4],2,mean)
?apply
apply(iris[,1:4],1,mean)
data(mtcars)
?mtcars
split(mtcars, mtcars$cyl)
view(mtcars)
View(mtcars)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars,cyl,mean)
apply(mtcars,2,mean)
with(mtcars(tapply(cyl,mpg,mean)))
with(mtcars(tapply(mpg,cyl,mean)))
with(mtcars,tapply(mpg,cyl,mean))
?with
lapply(mtcars,mean)
sapply(mtcars,mean)
?abs
?absdiff
?abs
with(mtcars,tapply(mpg,cyl,mean))
abs(15.10000-26.66364)
debug(ls)
ls()
abs(15.10000-26.66364)
with(mtcars,tapply(mpg,cyl,mean))
with(mtcars,tapply(mpg,cyl,mean))
27-15
with(mtcars,tapply(hp,cyl,mean))
abs()
with(mtcars,tapply(hp,cyl,mean))
with(mtcars,tapply(hp,cyl,mean))
q
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
Q
debug(ls)
ls()
with(mtcars,tapply(hp,cyl,mean))
data(mtcars)
with(mtcars,tapply(hp,cyl,mean))
abs(209.21429-82.63636)
f <- function() {
x <- 1
y <- 2
c(x, y)
}
f()
rm(f)
x <- 2
g <- function() {
y <- 1
c(x, y)
}
g()
rm(x, g)
x <- 1
h <- function() {
y <- 2
i <- function() {
z <- 3
c(x, y, z)
}
i()
}
h()
rm(x, h)
j <- function(x) {
y <- 2
function() {
c(x, y)
}
}
k <- j(1)
k()
rm(j,k)
install.packages("RMySQL")
library(RMySQL)
ucscDb <- dbconnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
ucscDb <- dbConnect(MySQL(),user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
install.packages("reticulate")
?version
R.verison()
R.version()
R.Version()
?update
?R.Update
??R.Update
install.packages("installr")
library(installr)
updateR()
install.packages("RPostgresSQL")
install.packages("Rtools")
"a"+"b"
paste("a","b", sep="")
setwd("C:/Users/Richard/dsprojects/GettingCleaningData/Week2")
fileUrl <- "http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
data <- read.fwf(fileUrl, widths = c(10,5,4,4,5,4,4,5,4,4,5,4,4), skip =4, header=FALSE)
for (i in c(2,5,8,11)){
data$paste("V",tostring(i),sep="")=NULL
}
for (i in c(2,5,8,11)){
data <- data$paste("V",tostring(i),sep="")=NULL
}
for (i in c(2,5,8,11)){
data$paste(V,i)=NULL
}
for (i in c(2,5,8,11)){
data$destring(paste("V",tostring(i),sep=""))=NULL
}
data$V2=NULL
data$V5=NULL
data$V8=NULL
data$V11=NULL
sum(data$V6[1:1254]) #08JAN2014
rm(data)
