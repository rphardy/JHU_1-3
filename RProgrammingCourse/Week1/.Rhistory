?data.frame
words <- c("One":"Ten")
numbers <- c(1:10)
words <- c("One","Two","Three","Four","Five","Six", "Seven", "Eight", "Nine", "Ten")
nw <- data.frame(numbers, words)
attributes(nw)
nw
nw[8,2]
a <- matrix(1:10, nrow=2, ncol=5)
x <- c(1:6)
y <- c(5:10)
matxy <- rbind(x,y)
matxy
matxyc <- cbind(x,y)
matxyc
m2 <- c(1:10)
matrix2 - dim(m2,2,5)
matrix2 <- dim(m2,2,5)
dim(m2) <- c(2,5)
m2
getwd()
x <- c("e", "e", "e", "w")
y <- factor(x)
x
y
label(y) <- c("east","west")
name(y) <- c("east","west")
values(y) <- c("east","west")
levels(y) <- c("east", "west")
y
?rnorm
args("rnorm")
rnorm
update()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("KernSmooth")
library(KernSmooth)
clear
getwd()
setwd("C:/Users/Richard/dsprojects")
getwd()
ls
dir()
install.packages("swirl")
library(swirl)
swirl()
x <- 1
print()
print(x)
x
x <- 1,2,3,4,5
x <- (1,2,3,4,5)
x <- c(1,2,3,4,5)
x
print(x)
x <- 1:5
print(x)
x
vector()
y <- vector()
y
yval
rm(c(x,y))
1/Inf
1/0
0/0
x
attributes(x)
attributes()
x <- vector("character", 10)
x
x <- vector("numeric", 25)
x
y <- c(1.7, "a")
y
attributes(y)
m <- matrix(nrow=3, nocol=4)
m <- matrix(nrow=3, ncol=4)
m
View(m)
v1 <- 1:3
v2 <- 10:12
m <- cbind(v1,v2)
m
m <- rbind(v1,v2)
m
is.na(m)
is.nan(m0)
is.nan(m)
mnan <- matric(nrow=2, ncol=3)
mnan <- matrix(nrow=2, ncol=3)
is.na(mnan)
x <- data.frame(fu = c("fu","ba","r"), b = c(T,F,F), ar= 1:3)
x
nrow(x)
ncol(x)
shape(x)
dim(x)
drop(x)
x
rm(x)
x
rm(c(m, mnan, m))
rm(c("m", "mnan", "m"))
rm(m,mnan,m)
rm(v1,v2)
la()
ls()
rm(ls())
m <- ls()
rm(m)
rm(ispd,iv,Rho,tpm,vii.y,yval)
rm(ispd,iv,Rho,tpm,vii,y,yval)
help("read.table")
x <- 4L
class(x)
x
x <- c(4, TRUE)
class(x)
cx
x
x <- c(1,4,6,4,8,2,6,9)
x
dim(x)
x
attributes(x)
x
x<- "a", "b", "c"
x<- c("a", "b", "c")
x
dim(x)
attributes(x)
x <- c(1, "c", T)
class(x)
x
x <- list(2, "a", "b", TRUE)
x
x[[1]]
class(x[[1]])
x <- c(17, 14, 4, 5, 13, 12, 10)
x
y <- x[x>10]==4
y
x
y
x
x[x>=11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]==4
x
x
x[x==4] > 10
getwd()
setwd(C:/Users/Richard/dsprojects/Week1)
setwd("C:/Users/Richard/dsprojects/Week1")
setwd("C:/Users/Richard/dsprojects/RProgrammingCourse/Week1")
getwd()
ls
ls()
wd()
dir()
hw <- read.csv("hw1_data.csv")
hw
dim(hw)
names(hw)
head(hw)
hw[1:2,]
dim(hw)
hw[152:153,]
hw[47,]
y<- is.na(hw[,"Ozone"])
y
count(y=T)
y["T",]
y[y=="T",]
y[[y=="T"],]
y[[y=="T"]]
y[y=="T"]
y["T"]
y["T",]
y <- int(y)
sum(y)
y
hw
bad <- is.na(hw[,"Ozone"])
bad
bad == y
rm(y)
hw[!bad]
hw[,"Ozone"!bad]
hw[,"Ozone" != bad]
hw.Ozfull <- hw[,"Ozone"]!bad
hw.Ozfull <- hw[,"Ozone"] != bad
hw.Ozfull
good <- complete.cases(hw[,"Ozone"])
good
hw[good]
hw[,"Ozone"== good]
kept <- hw[,"Ozone"== good]
kept
mean(hw[,"Ozone"])
mean(hw[,"Ozone"]==good)
mean(hw[,"Ozone"]!"NA")
mean(hw[,"Ozone"!NA])
mean(hw[,"Ozone"!"NA"])
mean(complete.cases(hw[,"Ozone"])
)
mean((hw[,"Ozone"]))
Ozmean <- colMeans(hw[,"Ozone"],na.rm=TRUE)
Means <- colmeans(hw, na.rm=TRUE)
Means <- colMeans(hw, na.rm=TRUE)
Means
Ozab31Tempab90 <- hw[,c("Ozone">31,"Temp">90)]
dim(Ozab31Tempab90)
head(Ozab31Tempab90)
rm(Ozab31Tempab90)
Ozab31 <- hw[hw$Ozone > 31]
Ozab31 <- hw[,hw$Ozone > 31]
Ozab31 <- hw[1:153,hw$Ozone > 31]
Ozab31 <- hw$Ozone > 31
hwOzab31 <- hw[Ozab31]
hwOzab31 <- hw[Ozab31==T]
hwOZab31Tempab91 <- subset(hw, Ozone >= 32, Temp >= 91)
dim(hwOZab31Tempab91)
br
head(hwOZab31Tempab91)
View(hwOZab31Tempab91)
View(kept)
library(dply)
library(dplyr)
hwOzab31 <- select(filter(hw, Ozone >31),)
install.packages(c("assertthat", "backports", "BH", "bindr", "bindrcpp", "caTools", "cli", "curl", "digest", "dplyr", "evaluate", "gclus", "glue", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "lme4", "markdown", "mime", "nloptr", "openssl", "packrat", "pillar", "pkgconfig", "plogr", "psych", "purrr", "R6", "Rcpp", "RcppEigen", "RCurl", "readxl", "rgl", "RJSONIO", "rlang", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "rvest", "selectr", "shiny", "sm", "sourcetools", "stringi", "stringr", "testthat", "tibble", "utf8", "xml2", "xtable", "yaml"))
x <- 4
class(x)
x  <- (c(True,4))
x  <- (c("True"",4))
)
x  <- (c("True",4))
class(x)
x  <- (c(4, TRUE))
class(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
class(x)
class(y)
z = x+y
class(z)
x <- c(3, 5, 1, 10, 12, 6)
x
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] -> 0
hw
colnames(hw)
hw[1:2,]
tail(hw)
hw[152:153,]
hw[47,]
missOz <- is.na(hw$Ozone,)
missOz <- is.na(,hw$Ozone)
Means
bad
hw
is.na(hw)
is.na(hw$Ozone)
hw[is.na(hw$Ozone),]
ozrem <- hw - hw[is.na(hw$Ozone),]
ozrem <- hw[-is.na(hw$Ozone),]
dim(ozrem)
ozrem
rm(ozrem)
hw[!is.na(hw$Ozone),]
hwOzmissrem <- hw[!is.na(hw$Ozone),]
dim(hwOzmissrem)
dim(hw)
dim(hw) - dim(hwOzmissrem)
is.na(hw$Ozone,)
hw[is.na(hw$Ozone),]
mean(hwOzmissrem)
mean(hwOzmissrem$Ozone)
q18data <- hw[hw$Ozone > 31 & hw$Temp >90,]
mean(q18data$Solar.R)
q18data
q18data <- q18data[!is.na(q18data)]
mean(q18data)
View(hwOzmissrem)
q18data <- hwOzmissrem[hwOzmissrem$Ozone > 31 & hwOzmissrem$Temp > 90,]
q18data
mean(q18data$Solar.R)
hw
hw[hw$Month == 5,]
hw[hw$Month=6,]
hw[hw$Month==6,]
mean(hw$temp[hw$Month==6,],)
q20data <- hw[hw$Month == 6,]
mean(q20data$Temp)
?InstallCourses
swirl()
library(swirl)
rm(list=ls())
swirl()
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt < sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
rm(ls=ls())
rm(list=ls())
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
?dir.create
args(dir.create)
dir.create(old.dir/testdir)
dir.create("testdir")
getwd()
setwd(old.dir/testdir)
setwd("old.dir/testdir")
GETWD()
getwd()
setwd("testdir")
file.creat("mytest.R")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
play()
?file.path
args(file.path)
nxt()
file.path("mytest3.R")
file.path("mytest3.R", folder1, folder2)
file.path(folder1, folder2)
file.path("folder1", "folder2")
?dir.create
getwd()
dir.create(file.path("testdir2","testdir3"),recrsive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
1:20
play()
rm(list = ls())
getwd()
nxt()
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
swirl()
setwd()
getwd()
rm(list = ls())
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Richard")
my_name <- c(my_char, "Richard")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y", "Z"), sep  ="")
paste(LETTERS, 1:4, sep  = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
ls()
my_data
plot(y)
hist(y)
is.na(my_data)
my_na
sum(my_na)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2 NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matriix <- my_vector
my_matrix <- my_vector
? atrix
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill,", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
?rbinom
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1){ ## random walk
z <- z + 1
}else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1){ ## random walk
z <- z + 1
}else {
z <- z - 1
}
}
z
## Random Walk Loop
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1,1,0.5)
if(coin == 1){ ## random walk
z <- z + 1
}else {
z <- z - 1
}
}
z
